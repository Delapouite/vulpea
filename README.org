:PROPERTIES:
:ID:                     8fc370e3-29ae-47ab-bb2e-02e572e54599
:END:

* Vulpea
:PROPERTIES:
:ID:                     c97abc5d-b39f-4356-bc93-8f591a0a6ac8
:END:

A collection of functions for note taking based on =org= and =org-roam=. This
repository goal is to be a tested library for other applications around note
taking. It started as an effort of organising my [[https://github.com/d12frosted/environment/][Emacs configurations]].

** Data types
:PROPERTIES:
:ID:                     26af31d5-4fd4-40bb-9058-8543e7359c53
:END:

A note is represented as a property list with the following properties:

- =:path= - absolute path to the note (even if the note is actually a heading);
- =:title= - title of the note (it might be an alias);
- =:tags= - tags extracted using =org-roam-tag-sources=;
- =:level= - level of the note inside =:path=, with =0= being a file-level note
  and other numbers being a header;
- =:id= - =ID= property of note (file-level or heading level).

If =ID= is not present in the note structure, this note is treated as
non-existent. For example, see =vulpea-select=.

*** Mandatory =ID= property
:PROPERTIES:
:ID:                     4aa43ec9-b576-4adc-b4a7-b01958ec2e15
:END:

Please note, that each note (!) must contain an =ID= for Vulpea to be
operational. One of the ways to always ensure existence of =ID= is to use the
following code:

#+begin_src emacs-lisp
  (defun +org-auto-id-add-to-headlines-in-file ()
    "Add ID property to the current file and all its headlines.

  Only missing properties are added."
    (when (and (or (eq major-mode 'org-mode)
                   (eq major-mode 'org-journal-mode))
               (eq buffer-read-only nil))
      (save-excursion
        (widen)
        (goto-char (point-min))
        (org-id-get-create)
        (org-map-entries #'org-id-get-create))))

  (add-hook 'before-save-hook #'+org-auto-id-add-to-headlines-in-file)
#+end_src

** Modules
:PROPERTIES:
:ID:                     3bc76150-557b-471b-94e3-efa2d903167a
:END:

*** =vulpea=
:PROPERTIES:
:ID:                     eafd127f-bf86-483f-a692-1bdda7d48659
:END:

This one-stop module contains some generic functions that didn't find their
place in separate modules. It also imports every other module.

Functions of interest:

- =vulpea-select= - function to =completing-read= a note optional filter.
- =vulpea-create= - function to create a new note file with given =TITLE= and
  =TEMPLATE=.

*** =vulpea-db=
:PROPERTIES:
:ID:                     55717e59-d850-4659-8a02-8153fda52fef
:END:

This module contains functions to query notes data base. Functions of interest:

- =vulpea-db-get-id-by-file= - function to get =ID= of a note represented by =FILE=.
- =vulpea-db-get-by-id= - function to get note represented by =ID=. Supports
  headings of the note.
- =vulpea-db-get-file-by-id= - function to get =FILE= of a note represented by
  =ID=. Supports headings of the note.
- =vulpea-db-get-title-by-id= - function to get =TITLE= of a note represented by
  =ID=. Supports headings of the note.
- =vulpea-db-search-by-title= - function to query notes with =TITLE=.

*** =vulpea-meta=
:PROPERTIES:
:ID:                     c1f820af-1940-46cb-a6bb-752146eec52b
:END:

This module contains functions for manipulating note metadata represented by the
first description list in the note, e.g. list like:

#+begin_src org-mode
- key1 :: value1
- key2 :: value21
- key2 :: value22
- key3 :: value3
#+end_src

Functions of interest:

- =vulpea-meta-get= - function to get a value of =PROP= for note with =ID=.
  Value is parsed based on the passed =TYPE= or as a string if omitted.
- =vulpea-meta-get-list= - function to get all values of =PROP= for note with
  =ID=. Values are parsed based on the passed =TYPE= or as a string if
  omitted.
- =vulpea-meta-set= - function to set =VALUE= of =PROP= for note with =ID=.
  Supports multi-value properties.
- =vulpea-meta-remove= - function to remove a =PROP= for note with =ID=.
- =vulpea-meta-remove= - function to remove all meta for note with =ID=.

** Building and testing
:PROPERTIES:
:ID:                     69263cd2-927a-4a38-9ca0-e2dc8848e285
:END:

Vulpea tests are written using [[https://github.com/jorgenschaefer/emacs-buttercup/][buttercup]] testing framework. And [[https://github.com/doublep/eldev/][eldev]] is used to
run them both locally and on CI. In order to run the tests locally, first
[[https://github.com/doublep/eldev/#installation][install]] =eldev= and then run:

#+begin_src bash
  $ eldev test
#+end_src
