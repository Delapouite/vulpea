:PROPERTIES:
:ID:                     8fc370e3-29ae-47ab-bb2e-02e572e54599
:END:

#+begin_html
<h1 align="center">Vulpea</h1>
<p align="center">
  <img width="256px" src="images/logo.png" alt="Banner">
</p>
<p align="center">
  <a href="https://github.com/d12frosted/vulpea/releases">
    <img alt="GitHub tag (latest by date)" src="https://img.shields.io/github/v/tag/d12frosted/vulpea">
  </a>
  <a href="https://github.com/d12frosted/vulpea/actions?query=workflow%3ACI">
    <img src="https://github.com/d12frosted/vulpea/workflows/CI/badge.svg" alt="CI Status Badge">
  </a>
  <a href="https://melpa.org/#/vulpea"><img alt="MELPA" src="https://melpa.org/packages/vulpea-badge.svg"/></a>
  <a href="https://stable.melpa.org/#/vulpea"><img alt="MELPA Stable" src="https://stable.melpa.org/packages/vulpea-badge.svg"/></a>
</p>
#+end_html

A collection of functions for note taking based on =org= and =org-roam=. This
repository goal is to be a tested library for other applications around note
taking.

Users of this library:

- [[https://github.com/d12frosted/environment][d12frosted/environment]] - Emacs configurations;
- [[https://github.com/d12frosted/vino][d12frosted/vino]] - collection of functions for cellar tracking and wine rating.

* Install
:PROPERTIES:
:ID:                     a021b872-2704-4d5a-adf1-0eb5a3a06ee0
:END:

=vulpea= is available via [[https://melpa.org/#/vulpea][MELPA]], but you can still install it manually, using
[[https://github.com/raxod502/straight][straight]], [[https://github.com/quelpa/quelpa][quelpa]], or any other tool.

** use-package
:PROPERTIES:
:ID:                     efb94478-a55d-4f98-8dd3-88f032585add
:END:

#+begin_src emacs-lisp
  (use-package vulpea
    :ensure t)
#+end_src

** straight.el
:PROPERTIES:
:ID:                     2beccee5-417a-4053-8275-217f41dedcca
:END:

#+begin_src emacs-lisp
  (straight-use-package
   '(vulpea :type git :host github :repo "d12frosted/vulpea"))
#+end_src

In case you have [[https://github.com/raxod502/straight.el/#integration-with-use-package][integration]] with [[https://github.com/jwiegley/use-package][use-package]]:

#+begin_src emacs-lisp
  (use-package vulpea
    :straight (vulpea
               :type git
               :host github
               :repo "d12frosted/vulpea"))
#+end_src

* Data types
:PROPERTIES:
:ID:                     26af31d5-4fd4-40bb-9058-8543e7359c53
:END:

A note is represented as a =vulpea-note= structure with the following
slots/fields:

- =vulpea-note-id= - =ID= property of note (file-level or heading level).
- =vulpea-note-path= - absolute path to the note (even if the note is actually a heading);
- =vulpea-note-level= - level of the note inside =:path=, with =0= being a
  file-level note and other numbers being a header;
- =vulpea-note-title= - title of the note (it might be an alias);
- =vulpea-note-primary-title= - primary title of the note (present only when
  =title= is an alias);
- =vulpea-note-aliases= - aliases of the note;
- =vulpea-note-tags= - tags of the note;

If =ID= is not present in the note structure, this note is treated as
non-existent. For example, =vulpea-select= returns such a note, when
=require-match= is =nil= and the user selects non-existent note.

** Mandatory =ID= property
:PROPERTIES:
:ID:                     4aa43ec9-b576-4adc-b4a7-b01958ec2e15
:END:

Please note, that each existing =vulpea-note= (!) must contain an =ID= for
Vulpea to be operational. =org-roam= should cover this, but another way to
always ensure existence of =ID= is to use the following code:

#+begin_src emacs-lisp
  (defun +org-auto-id-add-to-headlines-in-file ()
    "Add ID property to the current file and all its headlines."
    (when (and (or (eq major-mode 'org-mode)
                   (eq major-mode 'org-journal-mode))
               (eq buffer-read-only nil))
      (save-excursion
        (widen)
        (goto-char (point-min))
        (org-id-get-create)
        (org-map-entries #'org-id-get-create))))

  (add-hook 'before-save-hook #'+org-auto-id-add-to-headlines-in-file)
#+end_src

* Modules
:PROPERTIES:
:ID:                     3bc76150-557b-471b-94e3-efa2d903167a
:END:

** =vulpea=
:PROPERTIES:
:ID:                     eafd127f-bf86-483f-a692-1bdda7d48659
:END:

This one-stop module contains some generic functions that didn't find their
place in separate modules. It also imports every other module.

Functions of interest:

- =vulpea-select= - function to =completing-read= a note with optional filter.
  This function does not use =org-roam= completion system, as the latter is hard
  to extend, configure and reuse in broader context. Display of notes in
  completion list is defined by =vulpea-select-describe= function, which by
  default formats the note in the =title (primary_title) #space_separated_tags=
  format, which is controlled by two configurable values:
  - =vulpea-select-describe-fn= - description of the note (by default title).
  - =vulpea-select-annotate-fn= - annotation of the note (by default primary
    title when present and tags) with special face.
- =vulpea-find= - select and find a note, a wrapper around =vulpea-select= to
  provide a consistent experience; selection can be narrowed down by
  =vulpea-find-default-filter= or by passing explicit filter.
- =vulpea-find-backling= - select and find a backlink to the current note.
- =vulpea-insert= - select a note and insert a link to it. When user selects
  non-existent note, it is captured via =org-roam-capture= process (see
  =org-roam-capture-templates=). Once the link is inserted,
  =vulpea-insert-handle-functions= is called with inserted note as an argument,
  so you can easily perform any necessary post-insertion actions. Selection is
  controlled in a similar way to =vulpea-find= - via global
  =vulpea-insert-default-filter= or local filter.
- =vulpea-create= - function to create a new note file with given =TITLE=,
  =FILE-NAME=, extra =PROPERTIES=, =HEAD=, =BODY= and =CONTEXT=. Returns newly
  created note.

** =vulpea-note=
:PROPERTIES:
:ID:                     71b66fd8-d51d-49af-8ad1-e2ecadac6210
:END:

This module contains =vulpea-note= definition.

** =vulpea-db=
:PROPERTIES:
:ID: 55717e59-d850-4659-8a02-8153fda52fef
:END:

This module contains functions to query notes data base. Functions of interest:

- =vulpea-db-get-id-by-file= - function to get =ID= of a note represented by =FILE=.
- =vulpea-db-get-by-id= - function to get note represented by =ID=. Supports
  headings of the note.
- =vulpea-db-get-file-by-id= - function to get =FILE= of a note represented by
  =ID=. Supports headings of the note.
- =vulpea-db-search-by-title= - function to query notes with =TITLE=.
- =vulpea-db-query= - function to query notes with generic predicate.

** =vulpea-meta=
:PROPERTIES:
:ID:                     c1f820af-1940-46cb-a6bb-752146eec52b
:END:

This module contains functions for manipulating note metadata represented by the
first description list in the note, e.g. list like:

#+begin_src org-mode
- key1 :: value1
- key2 :: value21
- key2 :: value22
- key3 :: value3
#+end_src

Functions of interest:

- =vulpea-meta= - function to get metadata from =NOTE-OR-ID=. In most cases you
  should not use this function unless performance is important. In this case,
  take a look at bang functions, e.g. =vulpea-meta-get!=.
- =vulpea-meta-get= - function to get a value of =PROP= for note with =ID=.
  Value is parsed based on the passed =TYPE= or as a string if omitted.
- =vulpea-meta-get-list= - function to get all values of =PROP= for note with
  =ID=. Values are parsed based on the passed =TYPE= or as a string if omitted.
- =vulpea-meta-set= - function to set =VALUE= of =PROP= for =NOTE-OR-ID=.
  Supports multi-value properties.
- =vulpea-meta-remove= - function to remove a =PROP= for =NOTE-OR-ID=.
- =vulpea-meta-clean= - function to remove all meta for =NOTE-OR-ID=.

** =vulpea-buffer=
:PROPERTIES:
:ID:                     3d044495-a298-4422-b2a0-2a355430c1ac
:END:

This module contains functions for prop and meta manipulations in current
buffer.

Buffer properties are key-values defined as =#+KEY: VALUE= in the header of
buffer.

Metadata is defined as the first description list in the buffer, e.g. list like:

#+begin_src org-mode
- key1 :: value1
- key2 :: value21
- key2 :: value22
- key3 :: value3
#+end_src

- =vulpea-buffer-title-get= - function to get title of the current buffer.
- =vulpea-buffer-title-set= - function to set title of the current buffer.
- =vulpea-buffer-tags-get= - function to get list of tags.
- =vulpea-buffer-tags-set= - function to set/replace the value of =#+filetags=.
- =vulpea-buffer-tags-add= - function to add a tag to =#+filetags=.
- =vulpea-buffer-tags-remove= - function to remove a tag from =#+filetags=.
- =vulpea-buffer-prop-set= - function to set a =VALUE= of property with =NAME=
  in the current buffer, e.g. property in the buffer header using =#+NAME:
  value= format.
- =vulpea-buffer-prop-set-list= - function to set a value of property with
  =NAME= to the list of =VALUES= in the current buffer.
- =vulpea-buffer-prop-get= - function to get a value of property with =NAME=
  from the current buffer.
- =vulpea-buffer-prop-get-list= - function to get a value of property with
  =NAME= as a list separated by some =SEPARATORS=.
- =vulpea-buffer-meta= - function to get metadata from current buffer. In most
  cases you should not use this function unless performance is important. In
  this case, take a look at bang functions, e.g. =vulpea-buffer-meta-get!=.
- =vulpea-buffer-meta-get= - function to get a value of =PROP= from current
  buffer. Value is parsed based on the passed =TYPE= or as a string if omitted.
- =vulpea-buffer-meta-get!= - function to get a value of =PROP= from =META=
  (result of =vulpea-buffer-meta=). Value is parsed based on the passed =TYPE=
  or as a string if omitted. Use it performing multiple read operations in a
  row.
- =vulpea-buffer-meta-get-list= - function to get all values of =PROP= from
  current buffer. Values are parsed based on the passed =TYPE= or as a string if
  omitted.
- =vulpea-buffer-meta-get-list!= - function to get all values of =PROP= from
  =META= (result of =vulpea-buffer-meta=). Values are parsed based on the passed
  =TYPE= or as a string if omitted. Use it performing multiple read operations
  in a row.
- =vulpea-buffer-meta-set= - function to set =VALUE= of =PROP= in current
  buffer. Supports multi-value properties.
- =vulpea-buffer-meta-remove= - function to remove a =PROP= from current buffer.
- =vulpea-buffer-meta-clean= - function to remove all meta from current buffer.
- =vulpea-buffer-meta-format= - function to format a =VALUE=.

** =vulpea-utils=
:PROPERTIES:
:ID: 92508fc8-5500-489c-b534-659ebfdb8e9a
:END:

This module contains various utilities used by other modules. Functions of
interest:

- =vulpea-utils-with-note= - function to execute =BODY= with point at =NOTE=.
  Supports file-level notes as well as heading notes.
- =vulpea-utils-link-make-string= - make a bracket link to =NOTE=.
- =vulpea-utils-note-hash= function to calculate =sha1= of a given =NOTE=.

* Coding
:PROPERTIES:
:ID:                     fe0386d0-08d2-4eea-8c78-6a43fe97f318
:END:

Vulpea is developed using [[https://github.com/doublep/eldev/][eldev]]. If you are using =flycheck=, it is advised to
also use [[https://github.com/flycheck/flycheck-eldev][flycheck-eldev]], as it makes dependencies and project files available
thus mitigating false negative results from default Emacs Lisp checker.

* Building and testing
:PROPERTIES:
:ID:                     69263cd2-927a-4a38-9ca0-e2dc8848e285
:END:

Vulpea tests are written using [[https://github.com/jorgenschaefer/emacs-buttercup/][buttercup]] testing framework. And [[https://github.com/doublep/eldev/][eldev]] is used to
run them both locally and on CI. In order to run the tests locally, first
[[https://github.com/doublep/eldev/#installation][install]] =eldev= and then run:

#+begin_src bash
  $ make test
#+end_src

Please note, that the linter is used in this project, so you might want to run
it as well:

#+begin_src bash
  $ make lint
#+end_src

* Acknowledgements
:PROPERTIES:
:ID:                     41c3498f-3f20-440f-9c50-fdade1340b14
:END:

[[images/logo.png][Logo]] was created by [[https://www.behance.net/irynarutylo][Iryna Rutylo]].
